// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PruebaApi.Data;

#nullable disable

namespace PruebaApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240708191055_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("PruebaApi.CarroCompra", b =>
                {
                    b.Property<int>("idCarroCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("totalCompra")
                        .HasColumnType("INTEGER");

                    b.HasKey("idCarroCompra");

                    b.ToTable("CarroCompras");
                });

            modelBuilder.Entity("PruebaApi.DetalleCarro", b =>
                {
                    b.Property<int>("idDetalleCarro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CarroCompraId")
                        .HasColumnType("INTEGER");

                    b.HasKey("idDetalleCarro");

                    b.HasIndex("CarroCompraId")
                        .IsUnique();

                    b.ToTable("DetalleCarros");
                });

            modelBuilder.Entity("PruebaApi.Producto", b =>
                {
                    b.Property<int>("idProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DetalleCarroidDetalleCarro")
                        .HasColumnType("INTEGER");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("imgPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("precio")
                        .HasColumnType("INTEGER");

                    b.HasKey("idProducto");

                    b.HasIndex("DetalleCarroidDetalleCarro");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("PruebaApi.Rol", b =>
                {
                    b.Property<int>("idRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("rolDescripcion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("idRol");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("PruebaApi.Stock", b =>
                {
                    b.Property<int>("idStock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("productoidProducto")
                        .HasColumnType("INTEGER");

                    b.Property<int>("stockDisponible")
                        .HasColumnType("INTEGER");

                    b.HasKey("idStock");

                    b.HasIndex("productoidProducto");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("PruebaApi.Usuario", b =>
                {
                    b.Property<int>("idUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("nombreUsuario")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("passUsuario")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("rolUsuarioidRol")
                        .HasColumnType("INTEGER");

                    b.HasKey("idUsuario");

                    b.HasIndex("rolUsuarioidRol");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("PruebaApi.DetalleCarro", b =>
                {
                    b.HasOne("PruebaApi.CarroCompra", "CarroCompra")
                        .WithOne("DetalleCarro")
                        .HasForeignKey("PruebaApi.DetalleCarro", "CarroCompraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarroCompra");
                });

            modelBuilder.Entity("PruebaApi.Producto", b =>
                {
                    b.HasOne("PruebaApi.DetalleCarro", null)
                        .WithMany("Productos")
                        .HasForeignKey("DetalleCarroidDetalleCarro");
                });

            modelBuilder.Entity("PruebaApi.Stock", b =>
                {
                    b.HasOne("PruebaApi.Producto", "producto")
                        .WithMany()
                        .HasForeignKey("productoidProducto");

                    b.Navigation("producto");
                });

            modelBuilder.Entity("PruebaApi.Usuario", b =>
                {
                    b.HasOne("PruebaApi.Rol", "rolUsuario")
                        .WithMany()
                        .HasForeignKey("rolUsuarioidRol");

                    b.Navigation("rolUsuario");
                });

            modelBuilder.Entity("PruebaApi.CarroCompra", b =>
                {
                    b.Navigation("DetalleCarro");
                });

            modelBuilder.Entity("PruebaApi.DetalleCarro", b =>
                {
                    b.Navigation("Productos");
                });
#pragma warning restore 612, 618
        }
    }
}
